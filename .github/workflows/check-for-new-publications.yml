name: Update Publications

on:
  schedule:
    # Runs at 03:00 on the first day of each month
    - cron: '0 3 1 * *'
  workflow_dispatch:  # allows manual trigger

jobs:
  update-publications:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests pyyaml unidecode
      - name: Get last run date
        run: |
          last_run_iso=$(gh run list --workflow "Update Publications" --status success --limit 1 --json createdAt --jq '.[0].createdAt'  2>/dev/null || echo "")
          if [ -z "$last_run_iso" ]; then
            echo "No last run found"
            last_run_iso="2019-01-01T00:00:00Z"   # fallback default
          fi
          # Remove 2 months to allow lots of time for indexing
          CHECK_FROM=$(date -u -d "$last_run_iso -2 months" +"%Y-%m-%d")
          echo "CHECK_FROM=$CHECK_FROM"
          echo "CHECK_FROM=$CHECK_FROM" >> $GITHUB_ENV
      - name: Create branch
        run: |
          branch_name="update-publications-$(date +'%Y%m%d')"
          echo "branch_name=${branch_name}" >> $GITHUB_ENV
      - name: Run publication update script
        run: python scripts/update_publications.py
      - name: Check for changes
        id: check_changes
        run: |
          NEW_FILES=$(git ls-files --other --exclude-standard content/publication)
          if [ -z "${NEW_FILES}" ]; then
            echo "No new publications found."
            echo "has_new=false" >> $GITHUB_OUTPUT
          else
            echo "has_new=true" >> $GITHUB_OUTPUT
          fi
      - name: Commit changes
        if: steps.check_changes.outputs.has_new == 'true'
        run: |
          git checkout main
          git checkout -b $branch_name
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions"
          git add content/publication
          git commit -m "Automated update of publications"
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Push branch
        if: steps.check_changes.outputs.has_new == 'true'
        run: git push origin HEAD
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Create Pull Request
        if: steps.check_changes.outputs.has_new == 'true'
        run: |
          branch_name=$(git rev-parse --abbrev-ref HEAD)
          gh pr create \
            --title "Update publications" \
            --body "Automated update of publications since ${CHECK_FROM}." \
            --base main \
            --head $branch_name
        env:
          GH_TOKEN: ${{ github.token }}
